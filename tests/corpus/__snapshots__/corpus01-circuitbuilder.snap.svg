<svg width="640" height="640" viewBox="0 0 640 640" xmlns="http://www.w3.org/2000/svg">
  <rect width="100%" height="100%" fill="white" />
  <g>
    <circle data-type="point" data-label="NET1 (top)" data-x="-3.2" data-y="0.4" cx="48.88888888888886" cy="431.1111111111111" r="3" fill="rgba(128,0,128,0.8)" /><text x="53.88888888888886" y="426.1111111111111" font-family="sans-serif" font-size="12">NET1 (top)</text>
  </g>
  <g>
    <circle data-type="point" data-label="NET2 (left)" data-x="3" data-y="2.6" cx="600" cy="235.55555555555551" r="3" fill="rgba(128,0,128,0.8)" /><text x="605" y="230.55555555555551" font-family="sans-serif" font-size="12">NET2 (left)</text>
  </g>
  <g>
    <polyline data-points="-3.2,1.2 -3.2,0.4" data-type="line" data-label="" points="48.88888888888886,360 48.88888888888886,431.1111111111111" fill="none" stroke="rgba(0,0,0,0.8)" stroke-width="4.444444444444445" />
  </g>
  <g>
    <polyline data-points="1.4000000000000001,2.6 3,2.6" data-type="line" data-label="" points="457.77777777777777,235.55555555555551 600,235.55555555555551" fill="none" stroke="rgba(0,0,0,0.8)" stroke-width="4.444444444444445" />
  </g>
  <g>
    <polyline data-points="-1.4000000000000001,2.6 -3.2,2.6 -3.2,2.6 -3.2,2.2" data-type="line" data-label="" points="208.88888888888886,235.55555555555551 48.88888888888886,235.55555555555551 48.88888888888886,235.55555555555551 48.88888888888886,271.1111111111111" fill="none" stroke="rgba(0,0,0,0.8)" stroke-width="4.444444444444445" />
  </g>
  <g>
    <rect data-type="rect" data-label="P1" data-x="-3.2" data-y="1.7" x="39.99999999999994" y="271.1111111111111" width="17.77777777777783" height="88.88888888888891" fill="rgba(173,216,230,0.8)" stroke="black" stroke-width="0.01125" /><text x="44.99999999999994" y="266.1111111111111" font-family="sans-serif" font-size="12" fill="black">P1</text>
  </g>
  <g>
    <rect data-type="rect" data-label="U2" data-x="-2.220446049250313e-16" data-y="2.5" x="208.88888888888886" y="208.88888888888886" width="248.88888888888886" height="71.11111111111114" fill="rgba(173,216,230,0.8)" stroke="black" stroke-width="0.01125" /><text x="213.88888888888886" y="203.88888888888886" font-family="sans-serif" font-size="12" fill="black">U2</text>
  </g>
  <circle data-type="circle" data-label="" data-x="-3.2" data-y="1.2" cx="48.88888888888886" cy="360" r="8.88888888888889" fill="rgba(255,0,0,0.8)" stroke="black" stroke-width="0.01125" />
  <circle data-type="circle" data-label="" data-x="-3.2" data-y="2.2" cx="48.88888888888886" cy="271.1111111111111" r="8.88888888888889" fill="rgba(255,0,0,0.8)" stroke="black" stroke-width="0.01125" />
  <circle data-type="circle" data-label="" data-x="-1.4000000000000001" data-y="2.6" cx="208.88888888888886" cy="235.55555555555551" r="8.88888888888889" fill="rgba(255,0,0,0.8)" stroke="black" stroke-width="0.01125" />
  <circle data-type="circle" data-label="" data-x="-1.4000000000000001" data-y="2.4000000000000004" cx="208.88888888888886" cy="253.33333333333326" r="8.88888888888889" fill="rgba(255,0,0,0.8)" stroke="black" stroke-width="0.01125" />
  <circle data-type="circle" data-label="" data-x="1.4000000000000001" data-y="2.6" cx="457.77777777777777" cy="235.55555555555551" r="8.88888888888889" fill="rgba(255,0,0,0.8)" stroke="black" stroke-width="0.01125" />
  <circle data-type="circle" data-label="" data-x="1.4000000000000001" data-y="2.4000000000000004" cx="457.77777777777777" cy="253.33333333333326" r="8.88888888888889" fill="rgba(255,0,0,0.8)" stroke="black" stroke-width="0.01125" />
  <g id="crosshair" style="display: none">
    <line id="crosshair-h" y1="0" y2="640" stroke="#666" stroke-width="0.5" />
    <line id="crosshair-v" x1="0" x2="640" stroke="#666" stroke-width="0.5" /><text id="coordinates" font-family="monospace" font-size="12" fill="#666"></text>
  </g>
  <script>
    <![CDATA[
    document.currentScript.parentElement.addEventListener('mousemove', (e) => {
      const svg = e.currentTarget;
      const rect = svg.getBoundingClientRect();
      const x = e.clientX - rect.left;
      const y = e.clientY - rect.top;
      const crosshair = svg.getElementById('crosshair');
      const h = svg.getElementById('crosshair-h');
      const v = svg.getElementById('crosshair-v');
      const coords = svg.getElementById('coordinates');

      crosshair.style.display = 'block';
      h.setAttribute('x1', '0');
      h.setAttribute('x2', '640');
      h.setAttribute('y1', y);
      h.setAttribute('y2', y);
      v.setAttribute('x1', x);
      v.setAttribute('x2', x);
      v.setAttribute('y1', '0');
      v.setAttribute('y2', '640');

      // Calculate real coordinates using inverse transformation
      const matrix = {
        "a": 88.88888888888889,
        "c": 0,
        "e": 333.3333333333333,
        "b": 0,
        "d": -88.88888888888889,
        "f": 466.66666666666663
      };
      // Manually invert and apply the affine transform
      // Since we only use translate and scale, we can directly compute:
      // x' = (x - tx) / sx
      // y' = (y - ty) / sy
      const sx = matrix.a;
      const sy = matrix.d;
      const tx = matrix.e;
      const ty = matrix.f;
      const realPoint = {
        x: (x - tx) / sx,
        y: (y - ty) / sy // Flip y back since we used negative scale
      }

      coords.textContent = `(${realPoint.x.toFixed(2)}, ${realPoint.y.toFixed(2)})`;
      coords.setAttribute('x', (x + 5).toString());
      coords.setAttribute('y', (y - 5).toString());
    });
    document.currentScript.parentElement.addEventListener('mouseleave', () => {
      document.currentScript.parentElement.getElementById('crosshair').style.display = 'none';
    });
    ]]>
  </script>
</svg>